version: '3.9'

services:
  web:
    image: ${IMAGE_ARM64}
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - web_data:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    env_file:
      - .env
  migrations:
    image: ${IMAGE_ARM64}
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py migrate; python manage.py loaddata fixture.json; python manage.py createsuperuser --noinput
    env_file:
      - .env
  db:
    image: postgres:16.2-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
volumes:
  db_data:
  web_data: